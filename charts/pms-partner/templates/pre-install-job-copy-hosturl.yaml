apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-1"
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      namespace: {{ .Release.Namespace }}
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      serviceAccountName: {{ template "pms-partner.serviceAccountName" . }}
      restartPolicy: Never
      containers:
      - name: pre-install-job
        image: bitnami/kubectl:1.22.9
        command:
        - /bin/bash
        - -c
        - |
            #!/bin/bash
            echo "updating virtualservice cors policy"
            function update_yaml_with_pmp_host() {
                # Get PMP_HOST value from ConfigMap
                PMP_HOST=$(kubectl get cm global -o jsonpath={.data.mosip-pmp-host})
                # Fetch the YAML from Kubernetes
                YAML_CONTENT=$(kubectl get -n "{{ .Release.Namespace }}" virtualservices "{{.Release.Name}}" -o yaml)
                # Replace the placeholder with PMP_HOST value
                UPDATED_YAML_CONTENT=$(echo "$YAML_CONTENT" | sed "s|https://.*|https://$PMP_HOST|g")
                # Apply the updated YAML content
                echo "$UPDATED_YAML_CONTENT" | kubectl apply -f -
                echo "YAML file updated successfully with PMP_HOST value."
            }

            set -e
            set -o errexit
            set -o nounset
            set -o errtrace
            set -o pipefail
            update_yaml_with_pmp_host
